name: Python application

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Debug repository state
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Last commit:"
          git log -1
          echo "Repository status:"
          git status

      - name: Print last 10 commits
        run: |
        echo "Printing last 10 commits..."
        git log -10 --pretty=format:"%H %s"

      - name: Find last commit with #upload
        id: find_upload_commit
        run: |
          echo "Finding last commit with #upload in the message..."

          # Find the last commit with #upload in the message
          upload_commit=$(git log -F --grep="#upload" -1 --pretty=format:%H)

          if [ -z "$upload_commit" ]; then
            echo "No commit with #upload found."
            exit 1
          fi

          # Debug output to verify the commit SHA
          echo "Last commit with #upload SHA: $upload_commit"

          # Set the output using Environment Files
          echo "upload_commit=$upload_commit" >> $GITHUB_ENV

      - name: Get changed and deleted files since last #upload commit
        id: get_changes
        run: |
          echo "Extracting changed and deleted files from ${{ env.upload_commit }} to HEAD..."

          # Get the last commit SHA from the environment
          upload_commit=${{ env.upload_commit }}

          # Get changed files (excluding deletions) since the last #upload commit
          changed_files=$(git diff --name-only --diff-filter=ACMRT $upload_commit..HEAD)

          # Debug output for changed files
          echo "Changed files: $changed_files"

          # Get deleted files since the last #upload commit
          deleted_files=$(git diff --name-only --diff-filter=D $upload_commit..HEAD)

          # Debug output for deleted files
          echo "Deleted files: $deleted_files"

          # Set the output using Environment Files
          echo "changed_files=$changed_files" >> $GITHUB_ENV
          echo "deleted_files=$deleted_files" >> $GITHUB_ENV

      - name: Display changed and deleted files
        run: |
          echo "Changed files:"
          echo "${{ env.changed_files }}"
          echo "Deleted files:"
          echo "${{ env.deleted_files }}"

      - name: Check if commit message includes #upload
        id: check_commit_message
        run: |
          echo "Checking if the latest commit message contains #upload..."

          # Ensure you are in a Git repository
          if [ ! -d ".git" ]; then
              echo "fatal: not a git repository (or any of the parent directories): .git"
              exit 1
          fi

          # Check the latest commit message for '#upload'
          if [[ $(git log -1 --pretty=%B) =~ '#upload' ]]; then
              contains_upload=true
          else
              contains_upload=false
          fi

          # Set the output using Environment Files
          echo "contains_upload=$contains_upload" >> $GITHUB_ENV

      - name: Display contains_upload output
        run: echo "contains_upload is ${{ env.contains_upload }}"

      - name: Skip checks if contains_upload is false
        if: env.contains_upload == 'false'
        run: |
          echo "Commit message does not contains #upload. Stopping the pipeline."
          exit 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Adjust to the version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script
        env:
          SECRET_HOST_NAME: ${{ secrets.SECRET_HOST_NAME }}
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
          SECRET_USER_NAME: ${{ secrets.SECRET_USER_NAME }}
        run: |
          python -u cicd/script.py 
