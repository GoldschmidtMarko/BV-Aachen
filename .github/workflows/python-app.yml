name: Python application

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Debug repository state
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Last commit:"
          git log -1
          echo "Repository status:"
          git status

      - name: Get changed and deleted YAML files from the last commit
        id: get_changes
        run: |
          echo "Extracting changed and deleted YAML files from the last commit..."

          # Get the last commit SHA
          last_commit=${GITHUB_SHA}

          # Debug output to verify the commit SHA
          echo "Last commit SHA: $last_commit"

          # Get changed YAML files (excluding deletions)
          changed_files_yaml=$(git diff-tree --no-commit-id --name-only --diff-filter=ACMRT $last_commit | grep '\.yaml\|\.yml')

          # Debug output for changed files
          echo "Changed YAML files: $changed_files_yaml"

          # Get deleted YAML files
          deleted_files_yaml=$(git diff-tree --no-commit-id --name-only --diff-filter=D $last_commit | grep '\.yaml\|\.yml')

          # Debug output for deleted files
          echo "Deleted YAML files: $deleted_files_yaml"

          # Set the output using Environment Files
          echo "changed_files_yaml=$changed_files_yaml" >> $GITHUB_ENV
          echo "deleted_files_yaml=$deleted_files_yaml" >> $GITHUB_ENV

      - name: Display changed and deleted YAML files
        run: |
          echo "Changed YAML files:"
          echo "${{ env.changed_files_yaml }}"
          echo "Deleted YAML files:"
          echo "${{ env.deleted_files_yaml }}"

      - name: Check if commit message includes #upload
        id: check_commit_message
        run: |
          echo "Checking if the latest commit message contains #upload..."

          # Ensure you are in a Git repository
          if [ ! -d ".git" ]; then
              echo "fatal: not a git repository (or any of the parent directories): .git"
              exit 1
          fi

          # Check the latest commit message for '#upload'
          if [[ $(git log -1 --pretty=%B) =~ '#upload' ]]; then
              contains_upload=true
          else
              contains_upload=false
          fi

          # Set the output using Environment Files
          echo "contains_upload=$contains_upload" >> $GITHUB_ENV

      - name: Display contains_upload output
        run: echo "contains_upload is ${{ env.contains_upload }}"

      - name: Skip checks if contains_upload is false
        if: env.contains_upload == 'false'
        run: |
          echo "Commit message does not contains #upload. Stopping the pipeline."
          exit 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Adjust to the version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script
        env:
          SECRET_HOST_NAME: ${{ secrets.SECRET_HOST_NAME }}
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
          SECRET_USER_NAME: ${{ secrets.SECRET_USER_NAME }}
        run: |
          python -u cicd/script.py 
